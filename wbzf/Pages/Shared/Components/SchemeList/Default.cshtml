@using wbzf.Utility;
@using wbzf.Model;
@model PaginatedList<Scheme>
@inject IHttpContextAccessor _httpContextAccessor;
@{
    // var status = Model.First().status;
}


<div class="table-responsive" style="overflow-x: unset;">
    <table class="table table-striped table-bordered">
        <tr>

            <th>
                <a href="#" data-column="name">
                    Scheme Name
                    <i class="fa fa-sort"></i>
                </a>
            </th>

            <th>
                <a href="#" data-column="purpose">
                    Purpose
                    <i class="fa fa-sort"></i>
                </a>
            </th>

            <th>
                <a href="#" data-column="formurl">
                    Form Url
                    <i class="fa fa-sort"></i>
                </a>

            </th>
            <th>
                Action
            </th>

        </tr>
        @foreach (var obj in Model)
        {
            <tr>
                <td>@obj.Name</td>
                <td>@obj.Purpose.Name</td>
                <td>@obj.IsActive</td>
                <form method="post">
                <td>
                    <div class="w-75 btn-group" role="group">
                        <a asp-page="Create" asp-route-id="@obj.Id" class="btn btn-primary mx-2">
                            <i class="fa fa-pencil-square"></i>
                        </a>
                            @if (obj.IsActive == true)
                            {
                            <button type="submit" class="btn btn-danger p-2" onclick="ban(@obj.Id)">
                                <i class="fa fa-trash-o"></i>
                            </button>
                            }
                            else
                            {
                            <button type="submit" class="btn btn-success p-2" onclick="unban(@obj.Id)">
                                <i class="fa fa-recycle"></i>
                            </button>
                            }


                    </div>
                </td>
                </form>
            </tr>
        }
        @if (Model.TotalCount == 0)
        {
            <tr>
                <td><p>No Data Found</p></td>

            </tr>
        }
    </table>
</div>
<div class="pagination-wrapper">
    <div class="showing-text">
        <p>
            Showing
            @if (Model.Count > 0)
            {
                <span>@((Model.PageIndex - 1) * Model.PageSize + 1)</span>
            }
            else
            {
                <span>0</span>
            }
            to
            @((Model.PageIndex - 1) * Model.PageSize + Model.Count)
            of @Model.TotalCount entries
        </p>
    </div>
    <nav>
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item"> <a class="page-link" id="previousPageLink">Previous</a></li>
            }

            <li class="page-item">
                <a style="border:none" class="page-link">
                    Page
                    @if (Model.Count > 0)
                    {
                        <span>@Model.PageIndex</span>
                    }
                    else
                    {
                        <span>0</span>
                    }
                    of @Model.TotalPages
                </a>
            </li>
            @if (Model.HasNextPage)
            {
                <li class="page-item"><a class="page-link" id="nextPageLink">Next</a></li>
            }

        </ul>
    </nav>
</div>
